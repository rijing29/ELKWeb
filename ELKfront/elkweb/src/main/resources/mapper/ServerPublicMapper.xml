<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elk.elkweb.mapper.ServerInfoMapper">
    <resultMap id="BaseResultMap" type="com.elk.elkweb.entity.ServerPublic">
        <result column="TIME" property="time" jdbcType="TIMESTAMP"/>
        <result column="IP" property="ip" jdbcType="OTHER"/>
        <result column="NETFLOATFORWORKTIME" property="netfloatforworktime" jdbcType="DECIMAL"/>
        <result column="NETFLOATFORSPARETIME" property="netfloatforsparetime" jdbcType="DECIMAL"/>
        <result column="CPURATEFORWORKTIME" property="cpurateforworktime" jdbcType="DECIMAL"/>
        <result column="CPURATEFORSPARETIME" property="cpurateforsparetime" jdbcType="DECIMAL"/>
        <result column="MEMRATEFORWORKTIME" property="memrateforworktime" jdbcType="DECIMAL"/>
        <result column="MEMRATEFORSPARETIME" property="memrateforsparetime" jdbcType="DECIMAL"/>
    </resultMap>
    <insert id="insert" parameterType="com.elk.elkweb.entity.ServerPublic">
        insert into JK_SERVERRUNNINGDATA (TIME, IP, NETFLOATFORWORKTIME,
                                          NETFLOATFORSPARETIME, CPURATEFORWORKTIME,
                                          CPURATEFORSPARETIME, MEMRATEFORWORKTIME,
                                          MEMRATEFORSPARETIME)
        values (#{time,jdbcType=TIMESTAMP}, #{ip,jdbcType=OTHER}, #{netfloatforworktime,jdbcType=DECIMAL},
                #{netfloatforsparetime,jdbcType=DECIMAL}, #{cpurateforworktime,jdbcType=DECIMAL},
                #{cpurateforsparetime,jdbcType=DECIMAL}, #{memrateforworktime,jdbcType=DECIMAL},
                #{memrateforsparetime,jdbcType=DECIMAL})
    </insert>
    <insert id="insertSelective" parameterType="com.elk.elkweb.entity.ServerPublic">
        insert into JK_SERVERRUNNINGDATA
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="time != null">
                TIME,
            </if>
            <if test="ip != null">
                IP,
            </if>
            <if test="netfloatforworktime != null">
                NETFLOATFORWORKTIME,
            </if>
            <if test="netfloatforsparetime != null">
                NETFLOATFORSPARETIME,
            </if>
            <if test="cpurateforworktime != null">
                CPURATEFORWORKTIME,
            </if>
            <if test="cpurateforsparetime != null">
                CPURATEFORSPARETIME,
            </if>
            <if test="memrateforworktime != null">
                MEMRATEFORWORKTIME,
            </if>
            <if test="memrateforsparetime != null">
                MEMRATEFORSPARETIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=OTHER},
            </if>
            <if test="netfloatforworktime != null">
                #{netfloatforworktime,jdbcType=DECIMAL},
            </if>
            <if test="netfloatforsparetime != null">
                #{netfloatforsparetime,jdbcType=DECIMAL},
            </if>
            <if test="cpurateforworktime != null">
                #{cpurateforworktime,jdbcType=DECIMAL},
            </if>
            <if test="cpurateforsparetime != null">
                #{cpurateforsparetime,jdbcType=DECIMAL},
            </if>
            <if test="memrateforworktime != null">
                #{memrateforworktime,jdbcType=DECIMAL},
            </if>
            <if test="memrateforsparetime != null">
                #{memrateforsparetime,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <select id="showServerPublic" resultMap="BaseResultMap" parameterType="com.elk.elkweb.entity.ServerPublic">
        select ip,
               max(cpurateforworktime)  as cpurateforworktime,
               max(memrateforworktime)  as memrateforworktime,
               max(netfloatforworktime) as netfloatforworktime
        from JK_SERVERRUNNINGDATA
        where time in (select max (time) from JK_SERVERRUNNINGDATA)
        group by ip
        order by cpurateforworktime desc
    </select>

    <select id="getStorage" resultType="map">
        select time, dirname, info
        from JK_CC_USEAGE
        where time in (select max (time) from JK_CC_USEAGE)
    </select>

    <select id="getStorageInfo" resultType="map">
        select time, use
        from JK_CC_USEAGE
        where DIRNAME=#{DIRNAME,jdbcType=VARCHAR}
          and rownum <![CDATA[<=]]> 15
        order by time desc
    </select>
</mapper>